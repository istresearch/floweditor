// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HeaderElement instance methods handleChangeName should update state, call onChange prop: onChange 1`] = `
Array [
  Object {
    "name": "Content-Type",
    "uuid": "00c4498e-1c9e-4c26-aa7c-f81d13573129",
    "value": "application/json",
  },
  Array [],
]
`;

exports[`HeaderElement instance methods handleChangeName should update state, call onChange prop: setState 1`] = `
Array [
  Object {
    "name": Object {
      "value": "Content-Type",
    },
  },
]
`;

exports[`HeaderElement instance methods handleChangeName should update state, call onChange prop: text element 1`] = `
<FormElement
  entry={
    Object {
      "value": Object {
        "name": "Content-Type",
        "uuid": "00c4498e-1c9e-4c26-aa7c-f81d13573129",
        "value": "application/json",
      },
    }
  }
  name="Header"
>
  <div
    className="header"
    data-spec="header-container"
  >
    <div
      className="header_name"
      data-spec="name-container"
    >
      <TextInputElement
        entry={
          Object {
            "value": "Content-Type",
          }
        }
        name="Header Name"
        onChange={[Function]}
        placeholder="Header Name"
      />
    </div>
    <div
      className="header_value"
      data-spec="value-container"
    >
      <TextInputElement
        autocomplete={true}
        entry={
          Object {
            "value": "application/json",
          }
        }
        name="Value"
        onChange={[Function]}
        placeholder="Value"
      />
    </div>
    <div
      className="remove_ico"
      data-spec="remove-icon"
      onClick={[Function]}
    >
      <span
        className="fe-x"
      />
    </div>
  </div>
</FormElement>
`;

exports[`HeaderElement instance methods handleChangeValue should update state, call onChange prop 1`] = `
Array [
  Object {
    "value": Object {
      "value": Object {
        "name": "Content-Type",
        "uuid": "00c4498e-1c9e-4c26-aa7c-f81d13573129",
        "value": "application/json",
      },
    },
  },
]
`;

exports[`HeaderElement instance methods handleChangeValue should update state, call onChange prop 2`] = `
<FormElement
  entry={
    Object {
      "value": Object {
        "name": "Content-Type",
        "uuid": "00c4498e-1c9e-4c26-aa7c-f81d13573129",
        "value": "application/json",
      },
    }
  }
  name="Header"
>
  <div
    className="header"
    data-spec="header-container"
  >
    <div
      className="header_name"
      data-spec="name-container"
    >
      <TextInputElement
        entry={
          Object {
            "value": "Content-Type",
          }
        }
        name="Header Name"
        onChange={[Function]}
        placeholder="Header Name"
      />
    </div>
    <div
      className="header_value"
      data-spec="value-container"
    >
      <TextInputElement
        autocomplete={true}
        entry={
          Object {
            "value": Object {
              "name": "Content-Type",
              "uuid": "00c4498e-1c9e-4c26-aa7c-f81d13573129",
              "value": "application/json",
            },
          }
        }
        name="Value"
        onChange={[Function]}
        placeholder="Value"
      />
    </div>
    <div
      className="remove_ico"
      data-spec="remove-icon"
      onClick={[Function]}
    >
      <span
        className="fe-x"
      />
    </div>
  </div>
</FormElement>
`;

exports[`HeaderElement instance methods handleChangeValue should update state, call onChange prop: header change 1`] = `
Array [
  Object {
    "name": "Content-Type",
    "uuid": "00c4498e-1c9e-4c26-aa7c-f81d13573129",
    "value": Object {
      "name": "Content-Type",
      "uuid": "00c4498e-1c9e-4c26-aa7c-f81d13573129",
      "value": "application/json",
    },
  },
  Array [],
]
`;

exports[`HeaderElement render should render remove icon 1`] = `
<FormElement
  entry={
    Object {
      "value": Object {
        "name": "Content-Type",
        "uuid": "00c4498e-1c9e-4c26-aa7c-f81d13573129",
        "value": "application/json",
      },
    }
  }
  name="Header"
>
  <div
    className="header"
    data-spec="header-container"
  >
    <div
      className="header_name"
      data-spec="name-container"
    >
      <TextInputElement
        entry={
          Object {
            "value": "Content-Type",
          }
        }
        name="Header Name"
        onChange={[Function]}
        placeholder="Header Name"
      />
    </div>
    <div
      className="header_value"
      data-spec="value-container"
    >
      <TextInputElement
        autocomplete={true}
        entry={
          Object {
            "value": "application/json",
          }
        }
        name="Value"
        onChange={[Function]}
        placeholder="Value"
      />
    </div>
    <div
      className="remove_ico"
      data-spec="remove-icon"
      onClick={[Function]}
    >
      <span
        className="fe-x"
      />
    </div>
  </div>
</FormElement>
`;

exports[`HeaderElement render should render self, children with base props 1`] = `
Object {
  "autocomplete": true,
  "entry": Object {
    "value": "application/json",
  },
  "name": "Value",
  "onChange": [Function],
  "placeholder": "Value",
}
`;

exports[`HeaderElement render should render self, children with base props 2`] = `
<FormElement
  entry={
    Object {
      "value": Object {
        "name": "Content-Type",
        "uuid": "00c4498e-1c9e-4c26-aa7c-f81d13573129",
        "value": "application/json",
      },
    }
  }
  name="Header"
>
  <div
    className="header"
    data-spec="header-container"
  >
    <div
      className="header_name"
      data-spec="name-container"
    >
      <TextInputElement
        entry={
          Object {
            "value": "Content-Type",
          }
        }
        name="Header Name"
        onChange={[Function]}
        placeholder="Header Name"
      />
    </div>
    <div
      className="header_value"
      data-spec="value-container"
    >
      <TextInputElement
        autocomplete={true}
        entry={
          Object {
            "value": "application/json",
          }
        }
        name="Value"
        onChange={[Function]}
        placeholder="Value"
      />
    </div>
    <div
      className="remove_ico"
      data-spec="remove-icon"
      onClick={[Function]}
    >
      <span
        className="fe-x"
      />
    </div>
  </div>
</FormElement>
`;
